// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "Existing Docker Compose (Extend)",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../compose.yml",
		"compose.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "pytest-resource-path",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",

	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cat /etc/os-release",

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.formatting.provider":"black",
				"python.linting.enabled": true,
				"python.linting.lintOnSave": true,
				"python.linting.banditEnabled": true,
				"python.linting.banditArgs": [
					"--configfile",
					"pyproject.toml"
				],
				"python.linting.flake8Enabled": true,
				"python.linting.mypyEnabled": true,
				"python.linting.pydocstyleEnabled": true,
				// VS Code displays Pylint warning: import-error that not reported in Pylint by executing CLI.
				// "python.linting.pylintEnabled": true,
				// This setting forcibly generate __pycache__.
				// "python.testing.pytestEnabled": true,
				"[python]": {
					"editor.formatOnSave": true,
					"editor.codeActionsOnSave": {
						"source.fixAll": "explicit",
						"source.organizeImports": "explicit"
					}
				},
				"ruff.organizeImports": false,
				"emeraldwalk.runonsave": {
					"commands": [
						{
							"match": ".*\\.py",
							"cmd": "uv run autoflake --in-place ${file}"
						},
						{
							"match": ".*\\.py",
							"cmd": "uv run docformatter --in-place ${file}"
						}
					]
				},
				"cSpell.customDictionaries": {
					"project-words": {
					"name": "project-words",
					"path": "${workspaceRoot}/project-words.txt",
					"description": "Words used in this project",
					"addWords": true
					}
				},
				"files.autoGuessEncoding": true
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"GitHub.copilot",
				"streetsidesoftware.code-spell-checker",
				"tamasfe.even-better-toml",
				"charliermarsh.ruff",
				"ms-python.python",
				"ms-python.flake8",
				"ms-python.isort",
				"ms-python.mypy-type-checker",
				"ms-python.pylint",
				"wk-j.save-and-run",
				"grapecity.gc-excelviewer"
			]
		}
	}

	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"
}
